// Headings
h1, h2, h3, h4, h5, h6,
.h1, .h2, .h3, .h4, .h5, .h6 {
  font-family: $headings-font-family;
  font-weight: $headings-font-weight;
  line-height: $headings-line-height;
  margin:0;
  padding:0;
}

h1, .h1 {
    @include font-size(xxxl);
}

h2, .h2 {
    @include font-size(xxl);
}

h3, .h3 {
    @include font-size(xl);
}

h4, .h4 {
    @include font-size(lg);
}

h5, .h5 {
    @include font-size(md);
}

h6, .h6 {
    @include font-size(sm);
}

//font sizes

.text-xxxl {
    @include font-size(xxxl);
}

.text-xxl {
    @include font-size(xxl);
}

.text-xl {
    @include font-size(xl);
}

.text-lg {
    @include font-size(lg);
}

.text-md {
    @include font-size(md);
}

.text-sm {
    @include font-size(xs);
}

.text-xs {
    @include font-size(xs);
}

.text-center {
  text-align: center;
}

.text-right {
  text-align: right;
}


h1,h2,h3,h4,h5,h6{
  &+p,&+ul,&+ol{

  }
}

//some helper methods we can use to extend from within css, rather than multiple classes in the markup

p {
  margin: 0;
  padding:0;

  &:last-child{
    margin:0;
  }

  &.accent{
    color:$light-grey;
    font-style:italic;
  }
}

strong{
  font-weight:$font-weight-strong-base;
}

// Unordered and Ordered lists
ul,
ol {
  margin-top: 0;
  margin-bottom: ($line-height-computed / 2);
  ul,
  ol {
    margin-bottom: 0;
  }
}

//links
a {
    color: inherit;
    text-decoration: none;

    @include transition(all, 0.1s);

    &:hover, &:focus {
        text-decoration: none;
        cursor: pointer;
        color: inherit;
    }
    &:focus {}
}
p a:hover {
    text-decoration: underline;
}

//schemes
.scheme2{
  h1,h2,h3,h4,h5,h6,p{
    color:#fff;
  }
}